[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project]
name = "cloudzero-uca-tools"
dynamic = ["version"]
description = "CloudZero UCA Toolkit"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Apache-2.0" }
authors = [
    { name = "CloudZero", email = "support@cloudzero.com" },
]
keywords = [
    "CloudZero",
    "Toolkit",
    "UCA",
    "analysis",
    "cost",
    "economics",
    "unit",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "beautifulsoup4>=4.11.2",
    "boto3==1.26.118",
    "click>=8.1.3",
    "colored>=1.4.4",
    "jq>=1.4.0",
    "progressbar>=2.5",
    "requests>=2.28.2",
    "simplejson>=3.18.3",
    "stringcase>=1.2.0",
    "tabulate>=0.9.0",
    "rich==13.3.5",
    "user-agents==2.2.0",
    "geoip2==4.6.0",
    "python-whois==0.8.0",
    "termcolor>=2.4.0",
]

[project.scripts]
uca = "uca.main:cli"

[project.urls]
Homepage = "https://github.com/Cloudzero/cloudzero-uca-tools"

[tool]
rye = { dev-dependencies = [
    "pytest>=8.2.0",
    "coverage>=7.5.1",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-env>=1.1.3",
    "hatch>=1.10.0",
    "ruff>=0.4.3",
] }

[tool.hatch.version]
path = "uca/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["uca"]
[tool.hatch.build.targets.sdist]
include = [
    "/uca",
    "/uca/data/*",
    "/README.md",
    "/LICENSE",
]
exclude = [
    "/.github",
]

[tool.pytest.ini_options]
doctest_optionflags = [
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL"
]
env = [
    "NAMESPACE = TEST",
    "AWS_ACCESS_KEY_ID = testing",
    "AWS_SECRET_ACCESS_KEY = testing",
    "AWS_SESSION_TOKEN = testing",
    "AWS_DEFAULT_REGION = us-east-1"
]
markers = [
    "slow",
    "unit",
    "performance",
    "sns"
]
addopts = "--cov=uca --doctest-modules --cov-report term --showlocals -vvv"

[tool.hatch.envs.test]
dependencies = [
    "coverage>=7.5.1",
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-env>=1.1.3"
]
[tool.hatch.envs.test.scripts]
all = "pytest"
all-no-cov = "all --no-cov"


[tool.ruff]
target-version = "py39"
line-length = 120
indent-width = 4
exclude = [
    "build"
]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "B", # bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "PYI", # flake8-pyi
    "UP", # pyupgrade
    "RUF", # ruff
    "W", # pycodestyle
    "PIE", # flake8-pie
    "PGH004", # pygrep-hooks - Use specific rule codes when using noqa
    "PLE", # pylint error
    "PLW", # pylint warning
    "PLR1714", # Consider merging multiple comparisons
    "T100", # flake8-debugger
]
ignore = [
    "E402",
    "E501",
    "D200",
    "D211",
    "D212",
    "D100",
    "D104",
    "D400",
    "D415",
    "D417"
]


[tool.ruff.lint.per-file-ignores]
# Tests can use assertions and relative imports
"tests/**/*" = [
    "S101",
    "TID252"
]
"*/vendored/*" = [
    "D",
    "I",
    "UP",
    "B"
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "ruff>=0.4.3"
]
[tool.hatch.envs.lint.scripts]
fix = "ruff check --fix"
check = "ruff check"
