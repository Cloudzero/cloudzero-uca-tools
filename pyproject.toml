[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project]
name = "cloudzero-uca-tools"
dynamic = ["version"]
description = "CloudZero UCA Toolkit"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    { name = "CloudZero", email = "support@cloudzero.com" },
]
keywords = [
    "CloudZero",
    "Toolkit",
    "UCA",
    "analysis",
    "cost",
    "economics",
    "unit",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "beautifulsoup4>=4.11.2",
    "boto3==1.26.118",
    "click>=8.1.3",
    "colored>=1.4.4",
    "jq>=1.4.0",
    "progressbar>=2.5",
    "requests>=2.28.2",
    "simplejson>=3.18.3",
    "stringcase>=1.2.0",
    "tabulate>=0.9.0",
    "rich==13.3.5",
    "user-agents==2.2.0",
    "geoip2==4.6.0",
    "python-whois==0.8.0",
]

[project.scripts]
uca = "uca.main:cli"

[project.urls]
Homepage = "https://github.com/Cloudzero/cloudzero-uca-tools"

[tool.hatch.version]
path = "uca/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["uca"]
[tool.hatch.build.targets.sdist]
include = [
    "/uca",
    "/uca/data/*",
    "/README.md",
    "/LICENSE",
]
exclude = [
  "/.github",
]

[tool.pytest.ini_options]
doctest_optionflags = [
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL"
]
env = [
    "NAMESPACE = TEST",
	"AWS_ACCESS_KEY_ID = testing",
	"AWS_SECRET_ACCESS_KEY = testing",
    "AWS_SESSION_TOKEN = testing",
	"AWS_DEFAULT_REGION = us-east-1"
]
markers = [
    "slow",
    "unit",
    "performance",
    "sns"
]
addopts = "--cov-config=pyproject.toml --cov=uca --cov=tests --doctest-modules --cov-report term --showlocals -vvv"

[tool.hatch.envs.test]
dependencies = [
    "coverage[toml]>=7.1.0",
    "pytest>=7.2.1",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-env>=0.8.1"
]
[tool.hatch.envs.test.scripts]
all = "pytest"
all-no-cov = "all --no-cov"


[tool.ruff]
target-version = "py39"
line-length = 120
ignore = [
    "E402",
    "E501",
]
exclude = ["build"]
fixable = ["F"]

[tool.ruff.per-file-ignores]
# Tests can use assertions and relative imports
"tests/**/*" = ["S101", "TID252"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "ruff>=0.0.243"
]
[tool.hatch.envs.lint.scripts]
fix = "ruff . --fix"
check = "ruff ."